{
    swaggerVersion: "1.0",
    apiVersion: "Beast",
    basePath: "http://gateway.marvel.com",
    resourcePath: "/docs/public",
    apis: [
        {
            path: "/v1/public/characters",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CharacterDataWrapper",
                    notes: "Fetches lists of comic characters with optional filters. See notes on individual parameters below.",
                    _id: "52d5a2fea81896dc35000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a2fea81896dc35000019"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a2fea81896dc35000018"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a2fea81896dc35000017"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a2fea81896dc35000016"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a2fea81896dc35000015"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a2fea81896dc35000014"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a2fea81896dc35000013"
                        }
                    ],
                    parameters: [
                        {
                            name: "name",
                            description: "Return only characters matching the specified full character name (e.g. Spider-Man).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a2fea81896dc35000012",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only characters which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a2fea81896dc35000011",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a2fea81896dc35000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a2fea81896dc3500000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only characters which appear in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a2fea81896dc3500000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a2fea81896dc3500000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a2fea81896dc3500000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a2fea81896dc3500000c",
                                values: [
                                    "name",
                                    "modified",
                                    "-name",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a2fea81896dc35000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a2fea81896dc3500000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a2fea81896dc35000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of characters."
                }
            ]
        },
        {
            path: "/v1/public/characters/{characterId}",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCharacterIndividual",
                    responseClass: "CharacterDataWrapper",
                    notes: "This method fetches a single character resource. It is the canonical URI for any character resource provided by the API.",
                    _id: "52d5a2fea81896dc3500001c",
                    errorResponses: [
                        {
                            code: 404,
                            reason: "Character not found.",
                            _id: "52d5a2fea81896dc3500001e"
                        }
                    ],
                    parameters: [
                        {
                            name: "characterId",
                            description: "A single character id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a2fea81896dc3500001d",
                            allowMultiple: false,
                            required: true
                        }
                    ],
                    summary: "Fetches a single character by id."
                }
            ]
        },
        {
            path: "/v1/public/characters/{characterId}/comics",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicsCharacterCollection",
                    responseClass: "ComicDataWrapper",
                    notes: "Fetches lists of comics containing a specific character, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a33d7c33706536000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a33d7c33706536000026"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a33d7c33706536000025"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a33d7c33706536000024"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a33d7c33706536000023"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a33d7c33706536000022"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a33d7c33706536000021"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a33d7c33706536000020"
                        }
                    ],
                    parameters: [
                        {
                            name: "characterId",
                            description: "The character id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a33d7c3370653600001f",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "format",
                            description: "Filter by the issue format (e.g. comic, digital comic, hardcover).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600001d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600001e",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "formatType",
                            description: "Filter by the issue format type (comic or collection).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600001b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600001c",
                                values: [
                                    "comic",
                                    "collection"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "noVariants",
                            description: "Exclude variant comics from the result set.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000019",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600001a",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "dateDescriptor",
                            description: "Return comics within a predefined date range.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000017",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000018",
                                values: [
                                    "lastWeek",
                                    "thisWeek",
                                    "nextWeek",
                                    "thisMonth"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "dateRange",
                            description: "Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000016",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "hasDigitalIssue",
                            description: "Include only results which are available digitally.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000014",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000015",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only comics which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000013",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000012",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000011",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "sharedAppearances",
                            description: "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "collaborators",
                            description: "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600000c",
                                values: [
                                    "focDate",
                                    "onsaleDate",
                                    "title",
                                    "issueNumber",
                                    "modified",
                                    "-focDate",
                                    "-onsaleDate",
                                    "-title",
                                    "-issueNumber",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a33d7c3370653600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of comics filtered by a character id."
                }
            ]
        },
        {
            path: "/v1/public/characters/{characterId}/events",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCharacterEventsCollection",
                    responseClass: "EventDataWrapper",
                    notes: "Fetches lists of events in which a specific character appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3436ef2936d36000033",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3436ef2936d36000046"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3436ef2936d36000045"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3436ef2936d36000044"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3436ef2936d36000043"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3436ef2936d36000042"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3436ef2936d36000041"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3436ef2936d36000040"
                        }
                    ],
                    parameters: [
                        {
                            name: "characterId",
                            description: "The character ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3436ef2936d3600003f",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Filter the event list by name.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600003e",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only events which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600003d",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600003c",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600003b",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600003a",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000039",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000037",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3436ef2936d36000038",
                                values: [
                                    "name",
                                    "startDate",
                                    "modified",
                                    "-name",
                                    "-startDate",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000035",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3436ef2936d36000036",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000034",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of events filtered by a character id."
                }
            ]
        },
        {
            path: "/v1/public/characters/{characterId}/series",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCharacterSeriesCollection",
                    responseClass: "SeriesDataWrapper",
                    notes: "Fetches lists of comic series in which a specific character appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a349b5c9bd7536000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a349b5c9bd753600001e"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a349b5c9bd753600001d"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a349b5c9bd753600001c"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a349b5c9bd753600001b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a349b5c9bd753600001a"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a349b5c9bd7536000019"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a349b5c9bd7536000018"
                        }
                    ],
                    parameters: [
                        {
                            name: "characterId",
                            description: "The character ID",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a349b5c9bd7536000017",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "title",
                            description: "Filter by series title.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000016",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only series which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000015",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000014",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000013",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000012",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000011",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "seriesType",
                            description: "Filter the series by publication frequency type.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600000f",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd7536000010",
                                values: [
                                    "collection",
                                    "one shot",
                                    "limited",
                                    "ongoing"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "contains",
                            description: "Return only series containing one or more comics with the specified format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600000d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd753600000e",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd753600000c",
                                values: [
                                    "title",
                                    "modified",
                                    "startYear",
                                    "-title",
                                    "-modified",
                                    "-startYear"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a349b5c9bd753600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of series filtered by a character id."
                }
            ]
        },
        {
            path: "/v1/public/characters/{characterId}/stories",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCharacterStoryCollection",
                    responseClass: "StoryDataWrapper",
                    notes: "Fetches lists of comic stories featuring a specific character with optional filters. See notes on individual parameters below.",
                    _id: "52d5a34f67da1f7d36000031",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a34f67da1f7d36000043"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a34f67da1f7d36000042"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a34f67da1f7d36000041"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a34f67da1f7d36000040"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a34f67da1f7d3600003f"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a34f67da1f7d3600003e"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a34f67da1f7d3600003d"
                        }
                    ],
                    parameters: [
                        {
                            name: "characterId",
                            description: "The character ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a34f67da1f7d3600003c",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only stories which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600003b",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only stories contained in the specified (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600003a",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only stories contained the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000039",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000038",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000037",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000035",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a34f67da1f7d36000036",
                                values: [
                                    "id",
                                    "modified",
                                    "-id",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000033",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a34f67da1f7d36000034",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000032",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of stories filtered by a character id."
                }
            ]
        },
        {
            path: "/v1/public/comics",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicsCollection",
                    responseClass: "ComicDataWrapper",
                    notes: "Fetches lists of comics with optional filters. See notes on individual parameters below.",
                    _id: "52d5a308e2f19e0236000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a308e2f19e0236000026"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a308e2f19e0236000025"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a308e2f19e0236000024"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a308e2f19e0236000023"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a308e2f19e0236000022"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a308e2f19e0236000021"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a308e2f19e0236000020"
                        }
                    ],
                    parameters: [
                        {
                            name: "format",
                            description: "Filter by the issue format (e.g. comic, digital comic, hardcover).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600001e",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a308e2f19e023600001f",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "formatType",
                            description: "Filter by the issue format type (comic or collection).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600001c",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a308e2f19e023600001d",
                                values: [
                                    "comic",
                                    "collection"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "noVariants",
                            description: "Exclude variants (alternate covers, secondary printings, director's cuts, etc.) from the result set.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600001a",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a308e2f19e023600001b",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "dateDescriptor",
                            description: "Return comics within a predefined date range.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000018",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a308e2f19e0236000019",
                                values: [
                                    "lastWeek",
                                    "thisWeek",
                                    "nextWeek",
                                    "thisMonth"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "dateRange",
                            description: "Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000017",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "hasDigitalIssue",
                            description: "Include only results which are available digitally.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000015",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a308e2f19e0236000016",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only comics which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000014",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000013",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000012",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000011",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "sharedAppearances",
                            description: "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear). Accepts a comma-separated list of ids.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "collaborators",
                            description: "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work). Accepts a comma-separated list of ids.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a308e2f19e023600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a308e2f19e023600000c",
                                values: [
                                    "focDate",
                                    "onsaleDate",
                                    "title",
                                    "issueNumber",
                                    "modified",
                                    "-focDate",
                                    "-onsaleDate",
                                    "-title",
                                    "-issueNumber",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a308e2f19e023600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a308e2f19e0236000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of comics."
                }
            ]
        },
        {
            path: "/v1/public/comics/{comicId}",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicIndividual",
                    responseClass: "ComicDataWrapper",
                    notes: "This method fetches a single comic resource. It is the canonical URI for any comic resource provided by the API.",
                    _id: "52d5a308e2f19e0236000029",
                    errorResponses: [
                        {
                            code: 404,
                            reason: "Comic not found.",
                            _id: "52d5a308e2f19e023600002b"
                        }
                    ],
                    parameters: [
                        {
                            name: "comicId",
                            description: "A single comic.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a308e2f19e023600002a",
                            allowMultiple: false,
                            required: true
                        }
                    ],
                    summary: "Fetches a single comic by id."
                }
            ]
        },
        {
            path: "/v1/public/comics/{comicId}/characters",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicCharacterCollection",
                    responseClass: "CharacterDataWrapper",
                    notes: "Fetches lists of characters which appear in a specific comic with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3309c57b92a36000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3309c57b92a36000019"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3309c57b92a36000018"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3309c57b92a36000017"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3309c57b92a36000016"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3309c57b92a36000015"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3309c57b92a36000014"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3309c57b92a36000013"
                        }
                    ],
                    parameters: [
                        {
                            name: "comicId",
                            description: "The comic id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3309c57b92a36000012",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Return only characters matching the specified full character name (e.g. Spider-Man).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000011",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only characters which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000010",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3309c57b92a3600000c",
                                values: [
                                    "name",
                                    "modified",
                                    "-name",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3309c57b92a3600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of characters filtered by a comic id."
                }
            ]
        },
        {
            path: "/v1/public/comics/{comicId}/creators",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CreatorDataWrapper",
                    notes: "Fetches lists of comic creators whose work appears in a specific comic, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3359d05b73236000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3359d05b7323600001c"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3359d05b7323600001b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3359d05b7323600001a"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3359d05b73236000019"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3359d05b73236000018"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3359d05b73236000017"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3359d05b73236000016"
                        }
                    ],
                    parameters: [
                        {
                            name: "comicId",
                            description: "The comic id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3359d05b73236000015",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "firstName",
                            description: "Filter by creator first name (e.g. brian).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000014",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "middleName",
                            description: "Filter by creator middle name (e.g. Michael).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000013",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "lastName",
                            description: "Filter by creator last name (e.g. Bendis).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000012",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "suffix",
                            description: "Filter by suffix or honorific (e.g. Jr., Sr.).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000011",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only creators which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000010",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3359d05b7323600000c",
                                values: [
                                    "lastName",
                                    "firstName",
                                    "middleName",
                                    "suffix",
                                    "modified",
                                    "-lastName",
                                    "-firstName",
                                    "-middleName",
                                    "-suffix",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3359d05b7323600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of creators filtered by a comic id."
                }
            ]
        },
        {
            path: "/v1/public/comics/{comicId}/events",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getIssueEventsCollection",
                    responseClass: "EventDataWrapper",
                    notes: "Fetches lists of events in which a specific comic appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3436ef2936d3600001d",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3436ef2936d36000030"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3436ef2936d3600002f"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3436ef2936d3600002e"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3436ef2936d3600002d"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3436ef2936d3600002c"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3436ef2936d3600002b"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3436ef2936d3600002a"
                        }
                    ],
                    parameters: [
                        {
                            name: "comicId",
                            description: "The comic ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3436ef2936d36000029",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Filter the event list by name.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000028",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only events which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000027",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000026",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000025",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000024",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000023",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000021",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3436ef2936d36000022",
                                values: [
                                    "name",
                                    "startDate",
                                    "modified",
                                    "-name",
                                    "-startDate",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600001f",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3436ef2936d36000020",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600001e",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of events filtered by a comic id."
                }
            ]
        },
        {
            path: "/v1/public/comics/{comicId}/stories",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicStoryCollection",
                    responseClass: "StoryDataWrapper",
                    notes: "Fetches lists of comic stories in a specific comic issue, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a34f67da1f7d36000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a34f67da1f7d36000019"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a34f67da1f7d36000018"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a34f67da1f7d36000017"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a34f67da1f7d36000016"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a34f67da1f7d36000015"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a34f67da1f7d36000014"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a34f67da1f7d36000013"
                        }
                    ],
                    parameters: [
                        {
                            name: "comicId",
                            description: "The comic ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a34f67da1f7d36000012",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only stories which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000011",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only stories contained the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a34f67da1f7d3600000c",
                                values: [
                                    "id",
                                    "modified",
                                    "-id",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a34f67da1f7d3600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of stories filtered by a comic id."
                }
            ]
        },
        {
            path: "/v1/public/creators",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CreatorDataWrapper",
                    notes: "Fetches lists of comic creators with optional filters. See notes on individual parameters below.",
                    _id: "52d5a310c548e60a36000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a310c548e60a3600001c"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a310c548e60a3600001b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a310c548e60a3600001a"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a310c548e60a36000019"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a310c548e60a36000018"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a310c548e60a36000017"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a310c548e60a36000016"
                        }
                    ],
                    parameters: [
                        {
                            name: "firstName",
                            description: "Filter by creator first name (e.g. Brian).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000015",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "middleName",
                            description: "Filter by creator middle name (e.g. Michael).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000014",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "lastName",
                            description: "Filter by creator last name (e.g. Bendis).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000013",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "suffix",
                            description: "Filter by suffix or honorific (e.g. Jr., Sr.).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000012",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only creators which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000011",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a310c548e60a3600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a310c548e60a3600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a310c548e60a3600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a310c548e60a3600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a310c548e60a3600000c",
                                values: [
                                    "lastName",
                                    "firstName",
                                    "middleName",
                                    "suffix",
                                    "modified",
                                    "-lastName",
                                    "-firstName",
                                    "-middleName",
                                    "-suffix",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a310c548e60a3600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a310c548e60a36000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of creators."
                }
            ]
        },
        {
            path: "/v1/public/creators/{creatorId}",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorIndividual",
                    responseClass: "CreatorDataWrapper",
                    notes: "This method fetches a single creator resource. It is the canonical URI for any creator resource provided by the API.",
                    _id: "52d5a310c548e60a3600001f",
                    errorResponses: [
                        {
                            code: 404,
                            reason: "Creator not found.",
                            _id: "52d5a310c548e60a36000021"
                        }
                    ],
                    parameters: [
                        {
                            name: "creatorId",
                            description: "A single creator id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a310c548e60a36000020",
                            allowMultiple: false,
                            required: true
                        }
                    ],
                    summary: "Fetches a single creator by id."
                }
            ]
        },
        {
            path: "/v1/public/creators/{creatorId}/comics",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicsCollection",
                    responseClass: "ComicDataWrapper",
                    notes: "Fetches lists of comics in which the work of a specific creator appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a33d7c33706536000029",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a33d7c33706536000048"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a33d7c33706536000047"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a33d7c33706536000046"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a33d7c33706536000045"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a33d7c33706536000044"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a33d7c33706536000043"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a33d7c33706536000042"
                        }
                    ],
                    parameters: [
                        {
                            name: "creatorId",
                            description: "The creator ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a33d7c33706536000041",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "format",
                            description: "Filter by the issue format (e.g. comic, digital comic, hardcover).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600003f",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000040",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "formatType",
                            description: "Filter by the issue format type (comic or collection).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600003d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600003e",
                                values: [
                                    "comic",
                                    "collection"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "noVariants",
                            description: "Exclude variant comics from the result set.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600003b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600003c",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "dateDescriptor",
                            description: "Return comics within a predefined date range.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000039",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600003a",
                                values: [
                                    "lastWeek",
                                    "thisWeek",
                                    "nextWeek",
                                    "thisMonth"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "dateRange",
                            description: "Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000038",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "hasDigitalIssue",
                            description: "Include only results which are available digitally.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000036",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000037",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only comics which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000035",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000034",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000033",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000032",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000031",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "sharedAppearances",
                            description: "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000030",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "collaborators",
                            description: "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600002f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600002d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600002e",
                                values: [
                                    "focDate",
                                    "onsaleDate",
                                    "title",
                                    "issueNumber",
                                    "modified",
                                    "-focDate",
                                    "-onsaleDate",
                                    "-title",
                                    "-issueNumber",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600002b",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a33d7c3370653600002c",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600002a",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of comics filtered by a creator id."
                }
            ]
        },
        {
            path: "/v1/public/creators/{creatorId}/events",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorEventsCollection",
                    responseClass: "EventDataWrapper",
                    notes: "Fetches lists of events featuring the work of a specific creator with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3436ef2936d36000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3436ef2936d3600001a"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3436ef2936d36000019"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3436ef2936d36000018"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3436ef2936d36000017"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3436ef2936d36000016"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3436ef2936d36000015"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3436ef2936d36000014"
                        }
                    ],
                    parameters: [
                        {
                            name: "creatorId",
                            description: "The creator ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3436ef2936d36000013",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Filter the event list by name.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000012",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only events which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000011",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3436ef2936d3600000c",
                                values: [
                                    "name",
                                    "startDate",
                                    "modified",
                                    "-name",
                                    "-startDate",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3436ef2936d3600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of events filtered by a creator id."
                }
            ]
        },
        {
            path: "/v1/public/creators/{creatorId}/series",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorSeriesCollection",
                    responseClass: "SeriesDataWrapper",
                    notes: "Fetches lists of comic series in which a specific creator's work appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a349b5c9bd7536000021",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a349b5c9bd7536000038"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a349b5c9bd7536000037"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a349b5c9bd7536000036"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a349b5c9bd7536000035"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a349b5c9bd7536000034"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a349b5c9bd7536000033"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a349b5c9bd7536000032"
                        }
                    ],
                    parameters: [
                        {
                            name: "creatorId",
                            description: "The creator ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a349b5c9bd7536000031",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "title",
                            description: "Filter by series title.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000030",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only series which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600002f",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600002e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600002d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600002c",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600002b",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "seriesType",
                            description: "Filter the series by publication frequency type.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000029",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd753600002a",
                                values: [
                                    "collection",
                                    "one shot",
                                    "limited",
                                    "ongoing"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "contains",
                            description: "Return only series containing one or more comics with the specified format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000027",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd7536000028",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000025",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd7536000026",
                                values: [
                                    "title",
                                    "modified",
                                    "startYear",
                                    "-title",
                                    "-modified",
                                    "-startYear"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000023",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a349b5c9bd7536000024",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000022",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of series filtered by a creator id."
                }
            ]
        },
        {
            path: "/v1/public/creators/{creatorId}/stories",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorStoryCollection",
                    responseClass: "StoryDataWrapper",
                    notes: "Fetches lists of comic stories by a specific creator with optional filters. See notes on individual parameters below.",
                    _id: "52d5a34f67da1f7d3600001c",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a34f67da1f7d3600002e"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a34f67da1f7d3600002d"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a34f67da1f7d3600002c"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a34f67da1f7d3600002b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a34f67da1f7d3600002a"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a34f67da1f7d36000029"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a34f67da1f7d36000028"
                        }
                    ],
                    parameters: [
                        {
                            name: "creatorId",
                            description: "The ID of the creator.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a34f67da1f7d36000027",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only stories which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000026",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only stories contained in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000025",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only stories contained the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000024",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000023",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000022",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000020",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a34f67da1f7d36000021",
                                values: [
                                    "id",
                                    "modified",
                                    "-id",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600001e",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a34f67da1f7d3600001f",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600001d",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of stories filtered by a creator id."
                }
            ]
        },
        {
            path: "/v1/public/events",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getEventsCollection",
                    responseClass: "EventDataWrapper",
                    notes: "Fetches lists of events with optional filters. See notes on individual parameters below.",
                    _id: "52d5a31efcd3931236000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a31efcd393123600001a"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a31efcd3931236000019"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a31efcd3931236000018"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a31efcd3931236000017"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a31efcd3931236000016"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a31efcd3931236000015"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a31efcd3931236000014"
                        }
                    ],
                    parameters: [
                        {
                            name: "name",
                            description: "Return only events which match the specified name.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a31efcd3931236000013",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only events which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a31efcd3931236000012",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd3931236000011",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd3931236000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd393123600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd393123600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only events which take place in the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd393123600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a31efcd393123600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a31efcd393123600000c",
                                values: [
                                    "name",
                                    "startDate",
                                    "modified",
                                    "-name",
                                    "-startDate",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd3931236000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a31efcd393123600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a31efcd3931236000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of events."
                }
            ]
        },
        {
            path: "/v1/public/events/{eventId}",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getEventIndividual",
                    responseClass: "EventDataWrapper",
                    notes: "This method fetches a single event resource. It is the canonical URI for any event resource provided by the API.",
                    _id: "52d5a31efcd393123600001d",
                    errorResponses: [
                        {
                            code: 404,
                            reason: "Event not found.",
                            _id: "52d5a31efcd393123600001f"
                        }
                    ],
                    parameters: [
                        {
                            name: "eventId",
                            description: "A single event.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a31efcd393123600001e",
                            allowMultiple: false,
                            required: true
                        }
                    ],
                    summary: "Fetches a single event by id."
                }
            ]
        },
        {
            path: "/v1/public/events/{eventId}/characters",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getEventCharacterCollection",
                    responseClass: "CharacterDataWrapper",
                    notes: "Fetches lists of characters which appear in a specific event, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3309c57b92a3600001c",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3309c57b92a3600002e"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3309c57b92a3600002d"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3309c57b92a3600002c"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3309c57b92a3600002b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3309c57b92a3600002a"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3309c57b92a36000029"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3309c57b92a36000028"
                        }
                    ],
                    parameters: [
                        {
                            name: "eventId",
                            description: "The event ID",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3309c57b92a36000027",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Return only characters matching the specified full character name (e.g. Spider-Man).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000026",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only characters which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000025",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000024",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000023",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000022",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000020",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3309c57b92a36000021",
                                values: [
                                    "name",
                                    "modified",
                                    "-name",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600001e",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3309c57b92a3600001f",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600001d",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of characters filtered by an event id."
                }
            ]
        },
        {
            path: "/v1/public/events/{eventId}/comics",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicsCollection",
                    responseClass: "ComicDataWrapper",
                    notes: "Fetches lists of comics which take place during a specific event, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a33d7c3370653600004b",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a33d7c3370653600006b"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a33d7c3370653600006a"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a33d7c33706536000069"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a33d7c33706536000068"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a33d7c33706536000067"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a33d7c33706536000066"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a33d7c33706536000065"
                        }
                    ],
                    parameters: [
                        {
                            name: "eventId",
                            description: "The event id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a33d7c33706536000064",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "format",
                            description: "Filter by the issue format (e.g. comic, digital comic, hardcover).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000062",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000063",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "formatType",
                            description: "Filter by the issue format type (comic or collection).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000060",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000061",
                                values: [
                                    "comic",
                                    "collection"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "noVariants",
                            description: "Exclude variant comics from the result set.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600005e",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600005f",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "dateDescriptor",
                            description: "Return comics within a predefined date range.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600005c",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600005d",
                                values: [
                                    "lastWeek",
                                    "thisWeek",
                                    "nextWeek",
                                    "thisMonth"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "dateRange",
                            description: "Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600005b",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "hasDigitalIssue",
                            description: "Include only results which are available digitally.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000059",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600005a",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only comics which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000058",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000057",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000056",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000055",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000054",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000053",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "sharedAppearances",
                            description: "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000052",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "collaborators",
                            description: "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000051",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600004f",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000050",
                                values: [
                                    "focDate",
                                    "onsaleDate",
                                    "title",
                                    "issueNumber",
                                    "modified",
                                    "-focDate",
                                    "-onsaleDate",
                                    "-title",
                                    "-issueNumber",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600004d",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a33d7c3370653600004e",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600004c",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of comics filtered by an event id."
                }
            ]
        },
        {
            path: "/v1/public/events/{eventId}/creators",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CreatorDataWrapper",
                    notes: "Fetches lists of comic creators whose work appears in a specific event, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3359d05b7323600004f",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3359d05b73236000064"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3359d05b73236000063"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3359d05b73236000062"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3359d05b73236000061"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3359d05b73236000060"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3359d05b7323600005f"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3359d05b7323600005e"
                        }
                    ],
                    parameters: [
                        {
                            name: "eventId",
                            description: "The event ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3359d05b7323600005d",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "firstName",
                            description: "Filter by creator first name (e.g. brian).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600005c",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "middleName",
                            description: "Filter by creator middle name (e.g. Michael).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600005b",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "lastName",
                            description: "Filter by creator last name (e.g. Bendis).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600005a",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "suffix",
                            description: "Filter by suffix or honorific (e.g. Jr., Sr.).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000059",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only creators which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000058",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000057",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000056",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000055",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000053",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3359d05b73236000054",
                                values: [
                                    "lastName",
                                    "firstName",
                                    "middleName",
                                    "suffix",
                                    "modified",
                                    "-lastName",
                                    "-firstName",
                                    "-middleName",
                                    "-suffix",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000051",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3359d05b73236000052",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000050",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of creators filtered by an event id."
                }
            ]
        },
        {
            path: "/v1/public/events/{eventId}/series",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorSeriesCollection",
                    responseClass: "SeriesDataWrapper",
                    notes: "Fetches lists of comic series in which a specific event takes place, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a349b5c9bd753600003b",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a349b5c9bd7536000052"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a349b5c9bd7536000051"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a349b5c9bd7536000050"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a349b5c9bd753600004f"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a349b5c9bd753600004e"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a349b5c9bd753600004d"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a349b5c9bd753600004c"
                        }
                    ],
                    parameters: [
                        {
                            name: "eventId",
                            description: "The event ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a349b5c9bd753600004b",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "title",
                            description: "Filter by series title.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600004a",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only series which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000049",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000048",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000047",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000046",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000045",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "seriesType",
                            description: "Filter the series by publication frequency type.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000043",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd7536000044",
                                values: [
                                    "collection",
                                    "one shot",
                                    "limited",
                                    "ongoing"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "contains",
                            description: "Return only series containing one or more comics with the specified format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd7536000041",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd7536000042",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600003f",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a349b5c9bd7536000040",
                                values: [
                                    "title",
                                    "modified",
                                    "startYear",
                                    "-title",
                                    "-modified",
                                    "-startYear"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600003d",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a349b5c9bd753600003e",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a349b5c9bd753600003c",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of series filtered by an event id."
                }
            ]
        },
        {
            path: "/v1/public/events/{eventId}/stories",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getEventStoryCollection",
                    responseClass: "StoryDataWrapper",
                    notes: "Fetches lists of comic stories from a specific event, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a34f67da1f7d3600005b",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a34f67da1f7d3600006d"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a34f67da1f7d3600006c"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a34f67da1f7d3600006b"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a34f67da1f7d3600006a"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a34f67da1f7d36000069"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a34f67da1f7d36000068"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a34f67da1f7d36000067"
                        }
                    ],
                    parameters: [
                        {
                            name: "eventId",
                            description: "The ID of the event.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a34f67da1f7d36000066",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only stories which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000065",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only stories contained in the specified (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000064",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only stories contained the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000063",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000062",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000061",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600005f",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a34f67da1f7d36000060",
                                values: [
                                    "id",
                                    "modified",
                                    "-id",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600005d",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a34f67da1f7d3600005e",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600005c",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of stories filtered by an event id."
                }
            ]
        },
        {
            path: "/v1/public/series",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getSeriesCollection",
                    responseClass: "SeriesDataWrapper",
                    notes: "Fetches lists of comic series with optional filters. See notes on individual parameters below.",
                    _id: "52d5a324f853ce1a36000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a324f853ce1a3600001e"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a324f853ce1a3600001d"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a324f853ce1a3600001c"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a324f853ce1a3600001b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a324f853ce1a3600001a"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a324f853ce1a36000019"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a324f853ce1a36000018"
                        }
                    ],
                    parameters: [
                        {
                            name: "title",
                            description: "Return only series matching the specified title.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000017",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only series which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000016",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000015",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000014",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000013",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000012",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000011",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "seriesType",
                            description: "Filter the series by publication frequency type.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a324f853ce1a3600000f",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a324f853ce1a36000010",
                                values: [
                                    "collection",
                                    "one shot",
                                    "limited",
                                    "ongoing"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "contains",
                            description: "Return only series containing one or more comics with the specified format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a324f853ce1a3600000d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a324f853ce1a3600000e",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a324f853ce1a3600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a324f853ce1a3600000c",
                                values: [
                                    "title",
                                    "modified",
                                    "startYear",
                                    "-title",
                                    "-modified",
                                    "-startYear"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a324f853ce1a3600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a324f853ce1a36000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of series."
                }
            ]
        },
        {
            path: "/v1/public/series/{seriesId}",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getSeriesIndividual",
                    responseClass: "SeriesDataWrapper",
                    notes: "This method fetches a single comic series resource. It is the canonical URI for any comic series resource provided by the API.",
                    _id: "52d5a324f853ce1a36000021",
                    errorResponses: [
                        {
                            code: 404,
                            reason: "Series not found.",
                            _id: "52d5a324f853ce1a36000023"
                        }
                    ],
                    parameters: [
                        {
                            name: "seriesId",
                            description: "Filter by series title.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a324f853ce1a36000022",
                            allowMultiple: false,
                            required: true
                        }
                    ],
                    summary: "Fetches a single comic series by id."
                }
            ]
        },
        {
            path: "/v1/public/series/{seriesId}/characters",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getSeriesCharacterWrapper",
                    responseClass: "CharacterDataWrapper",
                    notes: "Fetches lists of characters which appear in specific series, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3309c57b92a36000031",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3309c57b92a36000043"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3309c57b92a36000042"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3309c57b92a36000041"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3309c57b92a36000040"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3309c57b92a3600003f"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3309c57b92a3600003e"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3309c57b92a3600003d"
                        }
                    ],
                    parameters: [
                        {
                            name: "seriesId",
                            description: "The series id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3309c57b92a3600003c",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Return only characters matching the specified full character name (e.g. Spider-Man).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600003b",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only characters which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600003a",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000039",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000038",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000037",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000035",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3309c57b92a36000036",
                                values: [
                                    "name",
                                    "modified",
                                    "-name",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000033",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3309c57b92a36000034",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000032",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of characters filtered by a series id."
                }
            ]
        },
        {
            path: "/v1/public/series/{seriesId}/comics",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicsCollection",
                    responseClass: "ComicDataWrapper",
                    notes: "Fetches lists of comics which are published as part of a specific series, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a33d7c3370653600006e",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a33d7c3370653600008d"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a33d7c3370653600008c"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a33d7c3370653600008b"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a33d7c3370653600008a"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a33d7c33706536000089"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a33d7c33706536000088"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a33d7c33706536000087"
                        }
                    ],
                    parameters: [
                        {
                            name: "seriesId",
                            description: "The series ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a33d7c33706536000086",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "format",
                            description: "Filter by the issue format (e.g. comic, digital comic, hardcover).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000084",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000085",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "formatType",
                            description: "Filter by the issue format type (comic or collection).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000082",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000083",
                                values: [
                                    "comic",
                                    "collection"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "noVariants",
                            description: "Exclude variant comics from the result set.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000080",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000081",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "dateDescriptor",
                            description: "Return comics within a predefined date range.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600007e",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600007f",
                                values: [
                                    "lastWeek",
                                    "thisWeek",
                                    "nextWeek",
                                    "thisMonth"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "dateRange",
                            description: "Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600007d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "hasDigitalIssue",
                            description: "Include only results which are available digitally.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600007b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600007c",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only comics which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600007a",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000079",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000078",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000077",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000076",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "sharedAppearances",
                            description: "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000075",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "collaborators",
                            description: "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000074",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000072",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000073",
                                values: [
                                    "focDate",
                                    "onsaleDate",
                                    "title",
                                    "issueNumber",
                                    "modified",
                                    "-focDate",
                                    "-onsaleDate",
                                    "-title",
                                    "-issueNumber",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000070",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a33d7c33706536000071",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600006f",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of comics filtered by a series id."
                }
            ]
        },
        {
            path: "/v1/public/series/{seriesId}/creators",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CreatorDataWrapper",
                    notes: "Fetches lists of comic creators whose work appears in a specific series, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3359d05b73236000037",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3359d05b7323600004c"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3359d05b7323600004b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3359d05b7323600004a"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3359d05b73236000049"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3359d05b73236000048"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3359d05b73236000047"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3359d05b73236000046"
                        }
                    ],
                    parameters: [
                        {
                            name: "seriesId",
                            description: "The series ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3359d05b73236000045",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "firstName",
                            description: "Filter by creator first name (e.g. brian).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000044",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "middleName",
                            description: "Filter by creator middle name (e.g. Michael).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000043",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "lastName",
                            description: "Filter by creator last name (e.g. Bendis).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000042",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "suffix",
                            description: "Filter by suffix or honorific (e.g. Jr., Sr.).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000041",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only creators which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000040",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600003f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600003e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600003d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600003b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3359d05b7323600003c",
                                values: [
                                    "lastName",
                                    "firstName",
                                    "middleName",
                                    "suffix",
                                    "modified",
                                    "-lastName",
                                    "-firstName",
                                    "-middleName",
                                    "-suffix",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000039",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3359d05b7323600003a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000038",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of creators filtered by a series id."
                }
            ]
        },
        {
            path: "/v1/public/series/{seriesId}/events",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getEventsCollection",
                    responseClass: "EventDataWrapper",
                    notes: "Fetches lists of events which occur in a specific series, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3436ef2936d36000049",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3436ef2936d3600005c"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3436ef2936d3600005b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3436ef2936d3600005a"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3436ef2936d36000059"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3436ef2936d36000058"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3436ef2936d36000057"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3436ef2936d36000056"
                        }
                    ],
                    parameters: [
                        {
                            name: "seriesId",
                            description: "The series ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3436ef2936d36000055",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Filter the event list by name.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000054",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only events which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000053",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000052",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000051",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000050",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "stories",
                            description: "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600004f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600004d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3436ef2936d3600004e",
                                values: [
                                    "name",
                                    "startDate",
                                    "modified",
                                    "-name",
                                    "-startDate",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600004b",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3436ef2936d3600004c",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600004a",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of events filtered by a series id."
                }
            ]
        },
        {
            path: "/v1/public/series/{seriesId}/stories",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getSeriesStoryCollection",
                    responseClass: "StoryDataWrapper",
                    notes: "Fetches lists of comic stories from a specific series with optional filters. See notes on individual parameters below.",
                    _id: "52d5a34f67da1f7d36000046",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a34f67da1f7d36000058"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a34f67da1f7d36000057"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a34f67da1f7d36000056"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a34f67da1f7d36000055"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a34f67da1f7d36000054"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a34f67da1f7d36000053"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a34f67da1f7d36000052"
                        }
                    ],
                    parameters: [
                        {
                            name: "seriesId",
                            description: "The series ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a34f67da1f7d36000051",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only stories which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000050",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only stories contained in the specified (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600004f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600004e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600004d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600004c",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d3600004a",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a34f67da1f7d3600004b",
                                values: [
                                    "id",
                                    "modified",
                                    "-id",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000048",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a34f67da1f7d36000049",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a34f67da1f7d36000047",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of stories filtered by a series id."
                }
            ]
        },
        {
            path: "/v1/public/stories",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getStoryCollection",
                    responseClass: "StoryDataWrapper",
                    notes: "Fetches lists of comic stories with optional filters. See notes on individual parameters below.",
                    _id: "52d5a329b121b82236000007",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a329b121b82236000019"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a329b121b82236000018"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a329b121b82236000017"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a329b121b82236000016"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a329b121b82236000015"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a329b121b82236000014"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a329b121b82236000013"
                        }
                    ],
                    parameters: [
                        {
                            name: "modifiedSince",
                            description: "Return only stories which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a329b121b82236000012",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only stories contained in the specified (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b82236000011",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only stories contained the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b82236000010",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b8223600000f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b8223600000e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b8223600000d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a329b121b8223600000b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a329b121b8223600000c",
                                values: [
                                    "id",
                                    "modified",
                                    "-id",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b82236000009",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a329b121b8223600000a",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a329b121b82236000008",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of stories."
                }
            ]
        },
        {
            path: "/v1/public/stories/{storyId}",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getStoryIndividual",
                    responseClass: "StoryDataWrapper",
                    notes: "This method fetches a single comic story resource. It is the canonical URI for any comic story resource provided by the API.",
                    _id: "52d5a329b121b8223600001c",
                    errorResponses: [
                        {
                            code: 404,
                            reason: "Story not found.",
                            _id: "52d5a329b121b8223600001e"
                        }
                    ],
                    parameters: [
                        {
                            name: "storyId",
                            description: "Filter by story id.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a329b121b8223600001d",
                            allowMultiple: false,
                            required: true
                        }
                    ],
                    summary: "Fetches a single comic story by id."
                }
            ]
        },
        {
            path: "/v1/public/stories/{storyId}/characters",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CharacterDataWrapper",
                    notes: "Fetches lists of comic characters appearing in a single story, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3309c57b92a36000046",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3309c57b92a36000058"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3309c57b92a36000057"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3309c57b92a36000056"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3309c57b92a36000055"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3309c57b92a36000054"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3309c57b92a36000053"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3309c57b92a36000052"
                        }
                    ],
                    parameters: [
                        {
                            name: "storyId",
                            description: "The story ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3309c57b92a36000051",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Return only characters matching the specified full character name (e.g. Spider-Man).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000050",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only characters which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600004f",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600004e",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600004d",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600004c",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3309c57b92a3600004a",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3309c57b92a3600004b",
                                values: [
                                    "name",
                                    "modified",
                                    "-name",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000048",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3309c57b92a36000049",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3309c57b92a36000047",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of characters filtered by a story id."
                }
            ]
        },
        {
            path: "/v1/public/stories/{storyId}/comics",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getComicsCollection",
                    responseClass: "ComicDataWrapper",
                    notes: "Fetches lists of comics in which a specific story appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a33d7c33706536000090",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a33d7c337065360000af"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a33d7c337065360000ae"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a33d7c337065360000ad"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a33d7c337065360000ac"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a33d7c337065360000ab"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a33d7c337065360000aa"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a33d7c337065360000a9"
                        }
                    ],
                    parameters: [
                        {
                            name: "storyId",
                            description: "The story ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a33d7c337065360000a8",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "format",
                            description: "Filter by the issue format (e.g. comic, digital comic, hardcover).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c337065360000a6",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c337065360000a7",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "formatType",
                            description: "Filter by the issue format type (comic or collection).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c337065360000a4",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c337065360000a5",
                                values: [
                                    "comic",
                                    "collection"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "noVariants",
                            description: "Exclude variant comics from the result set.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c337065360000a2",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c337065360000a3",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "dateDescriptor",
                            description: "Return comics within a predefined date range.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c337065360000a0",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c337065360000a1",
                                values: [
                                    "lastWeek",
                                    "thisWeek",
                                    "nextWeek",
                                    "thisMonth"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "dateRange",
                            description: "Return comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600009f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "hasDigitalIssue",
                            description: "Include only results which are available digitally.",
                            dataType: "boolean",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600009d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c3370653600009e",
                                values: [
                                    "true"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only comics which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600009c",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600009b",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c3370653600009a",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000099",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000098",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "sharedAppearances",
                            description: "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000097",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "collaborators",
                            description: "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000096",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000094",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a33d7c33706536000095",
                                values: [
                                    "focDate",
                                    "onsaleDate",
                                    "title",
                                    "issueNumber",
                                    "modified",
                                    "-focDate",
                                    "-onsaleDate",
                                    "-title",
                                    "-issueNumber",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000092",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a33d7c33706536000093",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a33d7c33706536000091",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of comics filtered by a story id."
                }
            ]
        },
        {
            path: "/v1/public/stories/{storyId}/creators",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getCreatorCollection",
                    responseClass: "CreatorDataWrapper",
                    notes: "Fetches lists of comic creators whose work appears in a specific story, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3359d05b7323600001f",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3359d05b73236000034"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3359d05b73236000033"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3359d05b73236000032"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3359d05b73236000031"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3359d05b73236000030"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3359d05b7323600002f"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3359d05b7323600002e"
                        }
                    ],
                    parameters: [
                        {
                            name: "storyId",
                            description: "The story ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3359d05b7323600002d",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "firstName",
                            description: "Filter by creator first name (e.g. brian).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600002c",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "middleName",
                            description: "Filter by creator middle name (e.g. Michael).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600002b",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "lastName",
                            description: "Filter by creator last name (e.g. Bendis).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b7323600002a",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "suffix",
                            description: "Filter by suffix or honorific (e.g. Jr., Sr.).",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000029",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only creators which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000028",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000027",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000026",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "events",
                            description: "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000025",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000023",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3359d05b73236000024",
                                values: [
                                    "lastName",
                                    "firstName",
                                    "middleName",
                                    "suffix",
                                    "modified",
                                    "-lastName",
                                    "-firstName",
                                    "-middleName",
                                    "-suffix",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000021",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3359d05b73236000022",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3359d05b73236000020",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of creators filtered by a story id."
                }
            ]
        },
        {
            path: "/v1/public/stories/{storyId}/events",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getEventsCollection",
                    responseClass: "EventDataWrapper",
                    notes: "Fetches lists of events in which a specific story appears, with optional filters. See notes on individual parameters below.",
                    _id: "52d5a3436ef2936d3600005f",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "52d5a3436ef2936d36000072"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "52d5a3436ef2936d36000071"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "52d5a3436ef2936d36000070"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "52d5a3436ef2936d3600006f"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "52d5a3436ef2936d3600006e"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "52d5a3436ef2936d3600006d"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "52d5a3436ef2936d3600006c"
                        }
                    ],
                    parameters: [
                        {
                            name: "storyId",
                            description: "The story ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "52d5a3436ef2936d3600006b",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "name",
                            description: "Filter the event list by name.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d3600006a",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only events which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000069",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000068",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000067",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "series",
                            description: "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000066",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000065",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000063",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "52d5a3436ef2936d36000064",
                                values: [
                                    "name",
                                    "startDate",
                                    "modified",
                                    "-name",
                                    "-startDate",
                                    "-modified"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000061",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "52d5a3436ef2936d36000062",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "52d5a3436ef2936d36000060",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of events filtered by a story id."
                }
            ]
        },
        {
            path: "/v1/public/stories/{storyId}/series",
            description: "",
            operations: [
                {
                    httpMethod: "GET",
                    nickname: "getStorySeriesCollection",
                    responseClass: "SeriesDataWrapper",
                    notes: "Fetches lists of comic series in which the specified story takes place. See notes on individual parameters below.",
                    _id: "5307de14f222269426000055",
                    errorResponses: [
                        {
                            code: 409,
                            reason: "Limit greater than 100.",
                            _id: "5307de14f22226942600006c"
                        },
                        {
                            code: 409,
                            reason: "Limit invalid or below 1.",
                            _id: "5307de14f22226942600006b"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized parameter.",
                            _id: "5307de14f22226942600006a"
                        },
                        {
                            code: 409,
                            reason: "Empty parameter.",
                            _id: "5307de14f222269426000069"
                        },
                        {
                            code: 409,
                            reason: "Invalid or unrecognized ordering parameter.",
                            _id: "5307de14f222269426000068"
                        },
                        {
                            code: 409,
                            reason: "Too many values sent to a multi-value list filter.",
                            _id: "5307de14f222269426000067"
                        },
                        {
                            code: 409,
                            reason: "Invalid value passed to filter.",
                            _id: "5307de14f222269426000066"
                        }
                    ],
                    parameters: [
                        {
                            name: "storyId",
                            description: "The story ID.",
                            dataType: "int",
                            paramType: "path",
                            _id: "5307de14f222269426000065",
                            allowMultiple: false,
                            required: true
                        },
                        {
                            name: "events",
                            description: "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "5307de14f222269426000064",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "title",
                            description: "Filter by series title.",
                            dataType: "string",
                            paramType: "query",
                            _id: "5307de14f222269426000063",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "modifiedSince",
                            description: "Return only series which have been modified since the specified date.",
                            dataType: "Date",
                            paramType: "query",
                            _id: "5307de14f222269426000062",
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "comics",
                            description: "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "5307de14f222269426000061",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "creators",
                            description: "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "5307de14f222269426000060",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "characters",
                            description: "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
                            dataType: "int",
                            paramType: "query",
                            _id: "5307de14f22226942600005f",
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "seriesType",
                            description: "Filter the series by publication frequency type.",
                            dataType: "string",
                            paramType: "query",
                            _id: "5307de14f22226942600005d",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "5307de14f22226942600005e",
                                values: [
                                    "collection",
                                    "one shot",
                                    "limited",
                                    "ongoing"
                                ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "contains",
                            description: "Return only series containing one or more comics with the specified format.",
                            dataType: "string",
                            paramType: "query",
                            _id: "5307de14f22226942600005b",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "5307de14f22226942600005c",
                                values: [
                                    "comic",
                                    "magazine",
                                    "trade paperback",
                                    "hardcover",
                                    "digest",
                                    "graphic novel",
                                    "digital comic",
                                    "infinite comic"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "orderBy",
                            description: "Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
                            dataType: "string",
                            paramType: "query",
                            _id: "5307de14f222269426000059",
                            allowableValues: {
                                valueType: "LIST",
                                _id: "5307de14f22226942600005a",
                                values: [
                                    "title",
                                    "modified",
                                    "startYear",
                                    "-title",
                                    "-modified",
                                    "-startYear"
                                ]
                            },
                            allowMultiple: true,
                            required: false
                        },
                        {
                            name: "limit",
                            description: "Limit the result set to the specified number of resources.",
                            dataType: "int",
                            paramType: "query",
                            _id: "5307de14f222269426000057",
                            allowableValues: {
                                min: 1,
                                max: 100,
                                valueType: "RANGE",
                                _id: "5307de14f222269426000058",
                                values: [ ]
                            },
                            allowMultiple: false,
                            required: false
                        },
                        {
                            name: "offset",
                            description: "Skip the specified number of resources in the result set.",
                            dataType: "int",
                            paramType: "query",
                            _id: "5307de14f222269426000056",
                            allowMultiple: false,
                            required: false
                        }
                    ],
                    summary: "Fetches lists of series filtered by a story id."
                }
            ]
        }
    ],
    models: {
        ComicList: {
            id: "ComicList",
            properties: {
                available: {
                    type: "int",
                    description: "The number of total available issues in this list. Will always be greater than or equal to the "returned" value."
                },
                returned: {
                    type: "int",
                    description: "The number of issues returned in this collection (up to 20)."
                },
                collectionURI: {
                    type: "string",
                    description: "The path to the full list of issues in this collection."
                },
                items: {
                    type: "Array",
                    description: "The list of returned issues in this collection.",
                    items: {
                        $ref: "ComicSummary"
                    }
                }
            }
        },
        EventList: {
            id: "EventList",
            properties: {
                available: {
                    type: "int",
                    description: "The number of total available events in this list. Will always be greater than or equal to the "returned" value."
                },
                returned: {
                    type: "int",
                    description: "The number of events returned in this collection (up to 20)."
                },
                collectionURI: {
                    type: "string",
                    description: "The path to the full list of events in this collection."
                },
                items: {
                    type: "Array",
                    description: "The list of returned events in this collection.",
                    items: {
                        $ref: "EventSummary"
                    }
                }
            }
        },
        CreatorList: {
            id: "CreatorList",
            properties: {
                available: {
                    type: "int",
                    description: "The number of total available creators in this list. Will always be greater than or equal to the "returned" value."
                },
                returned: {
                    type: "int",
                    description: "The number of creators returned in this collection (up to 20)."
                },
                collectionURI: {
                    type: "string",
                    description: "The path to the full list of creators in this collection."
                },
                items: {
                    type: "Array",
                    description: "The list of returned creators in this collection.",
                    items: {
                        $ref: "CreatorSummary"
                    }
                }
            }
        },
        CharacterList: {
            id: "CharacterList",
            properties: {
                available: {
                    type: "int",
                    description: "The number of total available characters in this list. Will always be greater than or equal to the "returned" value."
                },
                returned: {
                    type: "int",
                    description: "The number of characters returned in this collection (up to 20)."
                },
                collectionURI: {
                    type: "string",
                    description: "The path to the full list of characters in this collection."
                },
                items: {
                    type: "Array",
                    description: "The list of returned characters in this collection.",
                    items: {
                        $ref: "CharacterSummary"
                    }
                }
            }
        },
        SeriesList: {
            id: "SeriesList",
            properties: {
                available: {
                    type: "int",
                    description: "The number of total available series in this list. Will always be greater than or equal to the "returned" value."
                },
                returned: {
                    type: "int",
                    description: "The number of series returned in this collection (up to 20)."
                },
                collectionURI: {
                    type: "string",
                    description: "The path to the full list of series in this collection."
                },
                items: {
                    type: "Array",
                    description: "The list of returned series in this collection.",
                    items: {
                        $ref: "SeriesSummary"
                    }
                }
            }
        },
        StoryList: {
            id: "StoryList",
            properties: {
                available: {
                    type: "int",
                    description: "The number of total available stories in this list. Will always be greater than or equal to the "returned" value."
                },
                returned: {
                    type: "int",
                    description: "The number of stories returned in this collection (up to 20)."
                },
                collectionURI: {
                    type: "string",
                    description: "The path to the full list of stories in this collection."
                },
                items: {
                    type: "Array",
                    description: "The list of returned stories in this collection.",
                    items: {
                        $ref: "StorySummary"
                    }
                }
            }
        },
        CharacterSummary: {
            id: "CharacterSummary",
            properties: {
                resourceURI: {
                    type: "string",
                    description: "The path to the individual character resource."
                },
                name: {
                    type: "string",
                    description: "The full name of the character."
                },
                role: {
                    type: "string",
                    description: "The role of the creator in the parent entity."
                }
            }
        },
        EventSummary: {
            id: "EventSummary",
            properties: {
                resourceURI: {
                    type: "string",
                    description: "The path to the individual event resource."
                },
                name: {
                    type: "string",
                    description: "The name of the event."
                }
            }
        },
        SeriesSummary: {
            id: "SeriesSummary",
            properties: {
                resourceURI: {
                    type: "string",
                    description: "The path to the individual series resource."
                },
                name: {
                    type: "string",
                    description: "The canonical name of the series."
                }
            }
        },
        ComicSummary: {
            id: "ComicSummary",
            properties: {
                resourceURI: {
                    type: "string",
                    description: "The path to the individual comic resource."
                },
                name: {
                    type: "string",
                    description: "The canonical name of the comic."
                }
            }
        },
        Url: {
            id: "Url",
            properties: {
                type: {
                    type: "string",
                    description: "A text identifier for the URL."
                },
                url: {
                    type: "string",
                    description: "A full URL (including scheme, domain, and path)."
                }
            }
        },
        CreatorSummary: {
            id: "CreatorSummary",
            properties: {
                resourceURI: {
                    type: "string",
                    description: "The path to the individual creator resource."
                },
                name: {
                    type: "string",
                    description: "The full name of the creator."
                },
                role: {
                    type: "string",
                    description: "The role of the creator in the parent entity."
                }
            }
        },
        StorySummary: {
            id: "StorySummary",
            properties: {
                resourceURI: {
                    type: "string",
                    description: "The path to the individual story resource."
                },
                name: {
                    type: "string",
                    description: "The canonical name of the story."
                },
                type: {
                    type: "string",
                    description: "The type of the story (interior or cover)."
                }
            }
        },
        Image: {
            id: "Image",
            properties: {
                path: {
                    type: "string",
                    description: "The directory path of to the image."
                },
                extension: {
                    type: "string",
                    description: "The file extension for the image."
                }
            }
        },
        CharacterDataContainer: {
            id: "CharacterDataContainer",
            properties: {
                offset: {
                    type: "int",
                    description: "The requested offset (number of skipped results) of the call."
                },
                limit: {
                    type: "int",
                    description: "The requested result limit."
                },
                total: {
                    type: "int",
                    description: "The total number of resources available given the current filter set."
                },
                count: {
                    type: "int",
                    description: "The total number of results returned by this call."
                },
                results: {
                    type: "Array",
                    description: "The list of characters returned by the call.",
                    items: {
                        $ref: "Character"
                    }
                }
            }
        },
        CharacterDataWrapper: {
            id: "CharacterDataWrapper",
            properties: {
                code: {
                    type: "int",
                    description: "The HTTP status code of the returned result."
                },
                status: {
                    type: "string",
                    description: "A string description of the call status."
                },
                data: {
                    type: "CharacterDataContainer",
                    description: "The results returned by the call."
                },
                etag: {
                    type: "string",
                    description: "A digest value of the content returned by the call."
                }
            }
        },
        Character: {
            id: "Character",
            properties: {
                id: {
                    type: "int",
                    description: "The unique ID of the character resource."
                },
                name: {
                    type: "string",
                    description: "The name of the character."
                },
                description: {
                    type: "string",
                    description: "A short bio or description of the character."
                },
                modified: {
                    type: "Date",
                    description: "The date the resource was most recently modified."
                },
                resourceURI: {
                    type: "string",
                    description: "The canonical URL identifier for this resource."
                },
                urls: {
                    type: "Array",
                    description: "A set of public web site URLs for the resource.",
                    items: {
                        $ref: "Url"
                    }
                },
                thumbnail: {
                    type: "Image",
                    description: "The representative image for this character."
                },
                comics: {
                    type: "ComicList",
                    description: "A resource list containing comics which feature this character."
                },
                stories: {
                    type: "StoryList",
                    description: "A resource list of stories in which this character appears."
                },
                events: {
                    type: "EventList",
                    description: "A resource list of events in which this character appears."
                },
                series: {
                    type: "SeriesList",
                    description: "A resource list of series in which this character appears."
                }
            }
        },
        ComicDataWrapper: {
            id: "ComicDataWrapper",
            properties: {
                code: {
                    type: "int",
                    description: "The HTTP status code of the returned result."
                },
                status: {
                    type: "string",
                    description: "A string description of the call status."
                },
                data: {
                    type: "ComicDataContainer",
                    description: "The results returned by the call."
                },
                etag: {
                    type: "string",
                    description: "A digest value of the content returned by the call."
                }
            }
        },
        ComicDataContainer: {
            id: "ComicDataContainer",
            properties: {
                offset: {
                    type: "int",
                    description: "The requested offset (number of skipped results) of the call."
                },
                limit: {
                    type: "int",
                    description: "The requested result limit."
                },
                total: {
                    type: "int",
                    description: "The total number of resources available given the current filter set."
                },
                count: {
                    type: "int",
                    description: "The total number of results returned by this call."
                },
                results: {
                    type: "Array",
                    description: "The list of comics returned by the call",
                    items: {
                        $ref: "Comic"
                    }
                }
            }
        },
        ComicPrice: {
            id: "ComicPrice",
            properties: {
                type: {
                    type: "string",
                    description: "A description of the price (e.g. print price, digital price)."
                },
                price: {
                    type: "float",
                    description: "The price (all prices in USD)."
                }
            }
        },
        ComicDate: {
            id: "ComicDate",
            properties: {
                type: {
                    type: "string",
                    description: "A description of the date (e.g. onsale date, FOC date)."
                },
                date: {
                    type: "Date",
                    description: "The date."
                }
            }
        },
        TextObject: {
            id: "TextObject",
            properties: {
                type: {
                    type: "string",
                    description: "The canonical type of the text object (e.g. solicit text, preview text, etc.)."
                },
                language: {
                    type: "string",
                    description: "The IETF language tag denoting the language the text object is written in."
                },
                text: {
                    type: "string",
                    description: "The text."
                }
            }
        },
        CreatorDataWrapper: {
            id: "CreatorDataWrapper",
            properties: {
                code: {
                    type: "int",
                    description: "The HTTP status code of the returned result."
                },
                status: {
                    type: "string",
                    description: "A string description of the call status."
                },
                data: {
                    type: "CreatorDataContainer",
                    description: "The results returned by the call."
                },
                etag: {
                    type: "string",
                    description: "A digest value of the content returned by the call."
                }
            }
        },
        CreatorDataContainer: {
            id: "CreatorDataContainer",
            properties: {
                offset: {
                    type: "int",
                    description: "The requested offset (number of skipped results) of the call."
                },
                limit: {
                    type: "int",
                    description: "The requested result limit."
                },
                total: {
                    type: "int",
                    description: "The total number of resources available given the current filter set."
                },
                count: {
                    type: "int",
                    description: "The total number of results returned by this call."
                },
                results: {
                    type: "Array",
                    description: "The list of creators returned by the call.",
                    items: {
                        $ref: "Creator"
                    }
                }
            }
        },
        Creator: {
            id: "Creator",
            properties: {
                id: {
                    type: "int",
                    description: "The unique ID of the creator resource."
                },
                firstName: {
                    type: "string",
                    description: "The first name of the creator."
                },
                middleName: {
                    type: "string",
                    description: "The middle name of the creator."
                },
                lastName: {
                    type: "string",
                    description: "The last name of the creator."
                },
                suffix: {
                    type: "string",
                    description: "The suffix or honorific for the creator."
                },
                fullName: {
                    type: "string",
                    description: "The full name of the creator (a space-separated concatenation of the above four fields)."
                },
                modified: {
                    type: "Date",
                    description: "The date the resource was most recently modified."
                },
                resourceURI: {
                    type: "string",
                    description: "The canonical URL identifier for this resource."
                },
                urls: {
                    type: "Array",
                    description: "A set of public web site URLs for the resource.",
                    items: {
                        $ref: "Url"
                    }
                },
                thumbnail: {
                    type: "Image",
                    description: "The representative image for this creator."
                },
                series: {
                    type: "SeriesList",
                    description: "A resource list containing the series which feature work by this creator."
                },
                stories: {
                    type: "StoryList",
                    description: "A resource list containing the stories which feature work by this creator."
                },
                comics: {
                    type: "ComicList",
                    description: "A resource list containing the comics which feature work by this creator."
                },
                events: {
                    type: "EventList",
                    description: "A resource list containing the events which feature work by this creator."
                }
            }
        },
        EventDataWrapper: {
            id: "EventDataWrapper",
            properties: {
                code: {
                    type: "int",
                    description: "The HTTP status code of the returned result."
                },
                status: {
                    type: "string",
                    description: "A string description of the call status."
                },
                data: {
                    type: "EventDataContainer",
                    description: "The results returned by the call."
                },
                etag: {
                    type: "string",
                    description: "A digest value of the content returned by the call."
                }
            }
        },
        EventDataContainer: {
            id: "EventDataContainer",
            properties: {
                offset: {
                    type: "int",
                    description: "The requested offset (number of skipped results) of the call."
                },
                limit: {
                    type: "int",
                    description: "The requested result limit."
                },
                total: {
                    type: "int",
                    description: "The total number of resources available given the current filter set."
                },
                count: {
                    type: "int",
                    description: "The total number of results returned by this call."
                },
                results: {
                    type: "Array",
                    description: "The list of events returned by the call",
                    items: {
                        $ref: "Event"
                    }
                }
            }
        },
        Event: {
            id: "Event",
            properties: {
                id: {
                    type: "int",
                    description: "The unique ID of the event resource."
                },
                title: {
                    type: "string",
                    description: "The title of the event."
                },
                description: {
                    type: "string",
                    description: "A description of the event."
                },
                resourceURI: {
                    type: "string",
                    description: "The canonical URL identifier for this resource."
                },
                urls: {
                    type: "Array",
                    description: "A set of public web site URLs for the event.",
                    items: {
                        $ref: "Url"
                    }
                },
                modified: {
                    type: "Date",
                    description: "The date the resource was most recently modified."
                },
                start: {
                    type: "Date",
                    description: "The date of publication of the first issue in this event."
                },
                end: {
                    type: "Date",
                    description: "The date of publication of the last issue in this event."
                },
                thumbnail: {
                    type: "Image",
                    description: "The representative image for this event."
                },
                comics: {
                    type: "ComicList",
                    description: "A resource list containing the comics in this event."
                },
                stories: {
                    type: "StoryList",
                    description: "A resource list containing the stories in this event."
                },
                series: {
                    type: "SeriesList",
                    description: "A resource list containing the series in this event."
                },
                characters: {
                    type: "CharacterList",
                    description: "A resource list containing the characters which appear in this event."
                },
                creators: {
                    type: "CreatorList",
                    description: "A resource list containing creators whose work appears in this event."
                },
                next: {
                    type: "EventSummary",
                    description: "A summary representation of the event which follows this event."
                },
                previous: {
                    type: "EventSummary",
                    description: "A summary representation of the event which preceded this event."
                }
            }
        },
        Series: {
            id: "Series",
            properties: {
                id: {
                    type: "int",
                    description: "The unique ID of the series resource."
                },
                title: {
                    type: "string",
                    description: "The canonical title of the series."
                },
                description: {
                    type: "string",
                    description: "A description of the series."
                },
                resourceURI: {
                    type: "string",
                    description: "The canonical URL identifier for this resource."
                },
                urls: {
                    type: "Array",
                    description: "A set of public web site URLs for the resource.",
                    items: {
                        $ref: "Url"
                    }
                },
                startYear: {
                    type: "int",
                    description: "The first year of publication for the series."
                },
                endYear: {
                    type: "int",
                    description: "The last year of publication for the series (conventionally, 2099 for ongoing series) ."
                },
                rating: {
                    type: "string",
                    description: "The age-appropriateness rating for the series."
                },
                modified: {
                    type: "Date",
                    description: "The date the resource was most recently modified."
                },
                thumbnail: {
                    type: "Image",
                    description: "The representative image for this series."
                },
                comics: {
                    type: "ComicList",
                    description: "A resource list containing comics in this series."
                },
                stories: {
                    type: "StoryList",
                    description: "A resource list containing stories which occur in comics in this series."
                },
                events: {
                    type: "EventList",
                    description: "A resource list containing events which take place in comics in this series."
                },
                characters: {
                    type: "CharacterList",
                    description: "A resource list containing characters which appear in comics in this series."
                },
                creators: {
                    type: "CreatorList",
                    description: "A resource list of creators whose work appears in comics in this series."
                },
                next: {
                    type: "SeriesSummary",
                    description: "A summary representation of the series which follows this series."
                },
                previous: {
                    type: "SeriesSummary",
                    description: "A summary representation of the series which preceded this series."
                }
            }
        },
        SeriesDataWrapper: {
            id: "SeriesDataWrapper",
            properties: {
                code: {
                    type: "int",
                    description: "The HTTP status code of the returned result."
                },
                status: {
                    type: "string",
                    description: "A string description of the call status."
                },
                data: {
                    type: "SeriesDataContainer",
                    description: "The results returned by the call."
                },
                etag: {
                    type: "string",
                    description: "A digest value of the content returned by the call."
                }
            }
        },
        SeriesDataContainer: {
            id: "SeriesDataContainer",
            properties: {
                offset: {
                    type: "int",
                    description: "The requested offset (number of skipped results) of the call."
                },
                limit: {
                    type: "int",
                    description: "The requested result limit."
                },
                total: {
                    type: "int",
                    description: "The total number of resources available given the current filter set."
                },
                count: {
                    type: "int",
                    description: "The total number of results returned by this call."
                },
                results: {
                    type: "Array",
                    description: "The list of series returned by the call",
                    items: {
                        $ref: "Series"
                    }
                }
            }
        },
        StoryDataWrapper: {
            id: "StoryDataWrapper",
            properties: {
                code: {
                    type: "int",
                    description: "The HTTP status code of the returned result."
                },
                status: {
                    type: "string",
                    description: "A string description of the call status."
                },
                data: {
                    type: "StoryDataContainer",
                    description: "The results returned by the call."
                },
                etag: {
                    type: "string",
                    description: "A digest value of the content returned by the call."
                }
            }
        },
        StoryDataContainer: {
            id: "StoryDataContainer",
            properties: {
                offset: {
                    type: "int",
                    description: "The requested offset (number of skipped results) of the call."
                },
                limit: {
                    type: "int",
                    description: "The requested result limit."
                },
                total: {
                    type: "int",
                    description: "The total number of resources available given the current filter set."
                },
                count: {
                    type: "int",
                    description: "The total number of results returned by this call."
                },
                results: {
                    type: "Array",
                    description: "The list of stories returned by the call",
                    items: {
                        $ref: "Story"
                    }
                }
            }
        },
        Story: {
            id: "Story",
            properties: {
                id: {
                    type: "int",
                    description: "The unique ID of the story resource."
                },
                title: {
                    type: "string",
                    description: "The story title."
                },
                description: {
                    type: "string",
                    description: "A short description of the story."
                },
                resourceURI: {
                    type: "string",
                    description: "The canonical URL identifier for this resource. "
                },
                type: {
                    type: "string",
                    description: "The story type e.g. interior story, cover, text story."
                },
                modified: {
                    type: "Date",
                    description: "The date the resource was most recently modified."
                },
                thumbnail: {
                    type: "Image",
                    description: "The representative image for this story."
                },
                comics: {
                    type: "ComicList",
                    description: "A resource list containing comics in which this story takes place."
                },
                series: {
                    type: "SeriesList",
                    description: "A resource list containing series in which this story appears."
                },
                events: {
                    type: "EventList",
                    description: "A resource list of the events in which this story appears."
                },
                characters: {
                    type: "CharacterList",
                    description: "A resource list of characters which appear in this story."
                },
                creators: {
                    type: "CreatorList",
                    description: "A resource list of creators who worked on this story."
                },
                originalissue: {
                    type: "ComicSummary",
                    description: "A summary representation of the issue in which this story was originally published."
                }
            }
        },
        Comic: {
            id: "Comic",
            properties: {
                id: {
                    type: "int",
                    description: "The unique ID of the comic resource."
                },
                digitalId: {
                    type: "int",
                    description: "The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally."
                },
                title: {
                    type: "string",
                    description: "The canonical title of the comic."
                },
                issueNumber: {
                    type: "double",
                    description: "The number of the issue in the series (will generally be 0 for collection formats)."
                },
                variantDescription: {
                    type: "string",
                    description: "If the issue is a variant (e.g. an alternate cover, second printing, or directorâ€™s cut), a text description of the variant."
                },
                description: {
                    type: "string",
                    description: "The preferred description of the comic."
                },
                modified: {
                    type: "Date",
                    description: "The date the resource was most recently modified."
                },
                isbn: {
                    type: "string",
                    description: "The ISBN for the comic (generally only populated for collection formats)."
                },
                upc: {
                    type: "string",
                    description: "The UPC barcode number for the comic (generally only populated for periodical formats)."
                },
                diamondCode: {
                    type: "string",
                    description: "The Diamond code for the comic."
                },
                ean: {
                    type: "string",
                    description: "The EAN barcode for the comic."
                },
                issn: {
                    type: "string",
                    description: "The ISSN barcode for the comic."
                },
                format: {
                    type: "string",
                    description: "The publication format of the comic e.g. comic, hardcover, trade paperback."
                },
                pageCount: {
                    type: "int",
                    description: "The number of story pages in the comic."
                },
                textObjects: {
                    type: "Array",
                    description: "A set of descriptive text blurbs for the comic.",
                    items: {
                        $ref: "TextObject"
                    }
                },
                resourceURI: {
                    type: "string",
                    description: "The canonical URL identifier for this resource."
                },
                urls: {
                    type: "Array",
                    description: "A set of public web site URLs for the resource.",
                    items: {
                        $ref: "Url"
                    }
                },
                series: {
                    type: "SeriesSummary",
                    description: "A summary representation of the series to which this comic belongs."
                },
                variants: {
                    type: "Array",
                    description: "A list of variant issues for this comic (includes the "original" issue if the current issue is a variant).",
                    items: {
                        $ref: "ComicSummary"
                    }
                },
                collections: {
                    type: "Array",
                    description: "A list of collections which include this comic (will generally be empty if the comic's format is a collection).",
                    items: {
                        $ref: "ComicSummary"
                    }
                },
                collectedIssues: {
                    type: "Array",
                    description: "A list of issues collected in this comic (will generally be empty for periodical formats such as "comic" or "magazine").",
                    items: {
                        $ref: "ComicSummary"
                    }
                },
                dates: {
                    type: "Array",
                    description: "A list of key dates for this comic.",
                    items: {
                        $ref: "ComicDate"
                    }
                },
                prices: {
                    type: "Array",
                    description: "A list of prices for this comic.",
                    items: {
                        $ref: "ComicPrice"
                    }
                },
                thumbnail: {
                    type: "Image",
                    description: "The representative image for this comic."
                },
                images: {
                    type: "Array",
                    description: "A list of promotional images associated with this comic.",
                    items: {
                        $ref: "Image"
                    }
                },
                creators: {
                    type: "CreatorList",
                    description: "A resource list containing the creators associated with this comic."
                },
                characters: {
                    type: "CharacterList",
                    description: "A resource list containing the characters which appear in this comic."
                },
                stories: {
                    type: "StoryList",
                    description: "A resource list containing the stories which appear in this comic."
                },
                events: {
                    type: "EventList",
                    description: "A resource list containing the events in which this comic appears."
                }
            }
        }
    }
}